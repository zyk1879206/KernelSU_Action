name: Build boot image
on:
  workflow_dispatch:
     inputs:
      KERNEL_SOURCE:
        description: 'Kernel Source'
        required: true
        default: 'https://github.com/PixelExperience-Devices/kernel_google_msm-4.14'
      KERNEL_SOURCE_BRANCH:
        description: 'Branch'
        required: true
        default: 'thirteen-plus'
      KERNEL_DEFCONFIG :
        description: 'KERNEL_DEFCONFIG'
        required: true
        default: 'floral_defconfig'
      KERNEL_BUILD_CONFIG:
        description: 'Kernel Build Config'
        required: true
        default: 'https://raw.githubusercontent.com/zyk1879206/KernelSU_action/main/configs/build.config.flame'
      BOOTIMAGE:
        description: 'Boot image to get ramdisk'
        required: true
        default: 'https://raw.githubusercontent.com/zyk1879206/KernelSU_action/main/boot/PixelExperience_Plus_flame-13.0-20230109-0319-OFFICIAL.img'
      USE_KPROBES:
        description: 'Use Kprobes'
        required: false
        default: 'true'
        type: choice
        options:
        - true
        - false
      DISABLE_LTO:
        description: 'Disable LTO'
        required: false
        default: 'false'
        type: choice
        options:
        - true
        - false
      USE_KERNELSU:
        description: 'Use KernelSU'
        required: true
        default: 'true'
        type: choice
        options:
        - true
        - false

jobs:
  build:
    name: Build boot image
    runs-on: ubuntu-latest
    steps:
    - name: Setup build kernel environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        cd $GITHUB_WORKSPACE
        git clone https://gerrit.googlesource.com/git-repo
        mkdir kernel_workspace && cd kernel_workspace
        git config --global user.name "Github Action"
        git config --global user.email "Action@github.com"
        ../git-repo/repo init --depth=1 -u https://github.com/xiaoleGun/KernelSU_action -b main
        ../git-repo/repo sync -j$(nproc --all)
        sed -i '/SOURCE_DATE_EPOCH/d' build/_setup_env.sh
        sed -i 's/build-host/Mac-Pro/' build/_setup_env.sh
        sed -i 's/build-user/$(echo ${{ github.actor }} | tr A-Z a-z)/' build/_setup_env.sh
        wget -O boot.img ${{ github.event.inputs.BOOTIMAGE }}
        tools/mkbootimg/unpack_bootimg.py --boot_img=boot.img

    - name: Download kernel source
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone ${{ github.event.inputs.KERNEL_SOURCE }} -b ${{ github.event.inputs.KERNEL_SOURCE_BRANCH }} android-kernel --depth=1

    - name: Download kernel build config
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        wget -O build.config ${{ github.event.inputs.KERNEL_BUILD_CONFIG }}

    - name: Setup KernelSU
      if: github.event.inputs.USE_KERNELSU == 'true'
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/android-kernel
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
        sed -i 's/CONFIG_COMPAT_VDSO=y/CONFIG_COMPAT_VDSO=n/' arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
        if [ ${{ github.event.inputs.USE_KPROBES }} = true ]; then
            echo "CONFIG_MODULES=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
            echo "CONFIG_KPROBES=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
            echo "CONFIG_HAVE_KPROBES=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
            echo "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
        fi
        if [ ${{ github.event.inputs.DISABLE_LTO }} = true ]; then
            sed -i 's/CONFIG_LTO=y/CONFIG_LTO=n/' arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
            sed -i 's/CONFIG_LTO_CLANG=y/CONFIG_LTO_CLANG=n/' arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
            sed -i 's/CONFIG_THINLTO=y/CONFIG_THINLTO=n/' arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
            echo "CONFIG_LTO_NONE=y" >> arch/arm64/configs/${{ github.event.inputs.KERNEL_DEFCONFIG }}
        fi

    - name: Build boot-su.img
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        BRANCH=${{ github.event.inputs.KERNEL_SOURCE_BRANCH }} BUILD_CONFIG=android-kernel/build.config build/build.sh

    - name: Upload boot-su.img
      uses: actions/upload-artifact@v3
      with:
        name: boot-su-${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}-${{ env.BUILD_TIME }}.img
        path: kernel_workspace/out/${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}/dist/boot.img
